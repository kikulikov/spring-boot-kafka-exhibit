logging.level.root: INFO

application.topic.online-orders: online-orders
application.topic.count-and-total: count-and-total
application.topic.default-num-partitions: 5

#spring.kafka.properties.bootstrap.servers: localhost:9092
#spring.kafka.properties.schema.registry.url: http://localhost:8081

# Required connection configs for Kafka producer, consumer, and admin
spring.kafka.properties.bootstrap.servers: pkc-41wq6.eu-west-2.aws.confluent.cloud:9092
spring.kafka.properties.security.protocol: SASL_SSL
spring.kafka.properties.sasl.jaas.config: org.apache.kafka.common.security.plain.PlainLoginModule   required username='GYBEGQUL7VQRX5T6'   password='XXX';
spring.kafka.properties.sasl.mechanism: PLAIN

# Required for correctness in Apache Kafka clients prior to 2.6
spring.kafka.properties.client.dns.lookup: use_all_dns_ips

# Best practice for higher availability in Apache Kafka clients prior to 3.0
spring.kafka.properties.session.timeout.ms: 45000

# Best practice for Kafka producer to prevent data loss
spring.kafka.properties.acks: all

# Required connection configs for Confluent Cloud Schema Registry
spring.kafka.properties.schema.registry.url: https://psrc-lq3wm.eu-central-1.aws.confluent.cloud
spring.kafka.properties.basic.auth.credentials.source: USER_INFO
spring.kafka.properties.basic.auth.user.info: IZIL6IACAXLKPPHF:XXX

spring:
  kafka:
    admin:
      client-id: online-orders-admin

    producer:
      client-id: online-orders-avro-producer
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
#      value-serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
      value-serializer: io.confluent.encryption.serializers.avro.SecuredSpecificAvroSerializer
      properties:
        value.serializer.key: "GeneratedKey" # automatically uses AES
        value.serializer.wrapping.key: "RSAWrappingKey"
        encryption.provider.name: "cachedkeyprovider"
        cachedkeyprovider.provider.class: "io.confluent.encryption.common.crypto.cipher.impl.CachedCipherProvider"
        cachedkeyprovider.provider.expiry: 10
        cachedkeyprovider.provider.name: "generator"
        generator.provider.class: "io.confluent.encryption.common.crypto.cipher.impl.GeneratorCipherProvider"
        generator.provider.name: "local"
        local.provider.class: "io.confluent.encryption.common.crypto.cipher.impl.LocalCipherProvider"
        local.provider.keys: "Hash,RSAWrappingKey"
        local.provider.Hash.key.type: "Hash"
        local.provider.RSAWrappingKey.key.type: "KeyPair"
        local.provider.RSAWrappingKey.key.private: "MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDnaSw7eWcppqCW0dMJ9Q1aC+aUvg7K0xTYfEStyMOym9a+EKjcr/6hU0LkIUksmSmLGBgYVAey2OPXFmO1B3Qbvxla9EPtdQ/qilJluB7HH2z10oeBuS7tkdo+zA/u4AHDOCfa9+yk47IWNLPBjkVs4xMo3cL6rVyM5hu5hVq3lRVYbVV2AT7oYdM3C6nEw5kdE01uSgjkcpd7Rg58ZiLNYdr91rwEblxxoF40tdHBs5oQ4DWMyx1hZ1npyekEsVYsq/ACsEaIMGQXNZsLZ7XXmAV14sZXvSVsHiUGkv/7LKgsUEZ0lUH9PRqs4jK+6nSQOxiLqM6yCRAzr5MSiOlXAgMBAAECggEAKC3fqzfqDJZM3cLyxJDSz6avU3YodVjvDqOM/SuVpwZd48RavW6lZHdjbt7EqMSzLN5zGI5Gg+waqzbM+xqfM04b5enxfWJM8CkyI00zstkm/wud0Y1Is6EWZr7hqVUlmTK/4MoZQYvzWN2vtFSygzRuGDNg7kt5fVFa0PxxgtxAPwOXFWDMT7bU7csjrsOtxm7bgwm+rxSCSPU9J834TTzQlPID8tP9Ajvj4TrllZN55oKdDNO5aVaMkYRKMBbg/mzHpQE9wWeKX1iGYR0x8N3ctKJvAC6SYcnOiAKKPg0C5Qi6RFg88GdaYq1tUtDbjcP5CUWMZ2X9M5XEqO2WAQKBgQD3iRy7Fm91EFy2duJxNULe0qU5hbRekCmEX7/5HNk+BjWDFLLVFkgtWop7+p+G/TwmmPdpEtRYCbT1k2qHrPgohReo2VzF+K7Q3yppnFu2dPy5T2AL02J9J4BCzxB1uwzpnGd2PqwUX79WsF2ol18F04sMeXUzuKggOm7M2nl8VwKBgQDvUugqw3Yfl9TF5VkVyA26/FOfMYQZ2ovzpTg9Qq7il1F37h8Lg83zvI63NXUlY2khweo0FyMbtZpG0a9dpQBE0f4D2n9JsmpuGbgjYYNNEWUQvuI3bqdQ/ecPpMGvYXWvtnTPG0jr6GbSobL/RXwgOp4H8tOpFNEejaARjDfbAQKBgQCmpYdTKMqGnCpeqPDP2FSZoGSdsjb5BsL8nF2ov1Q93n4+LjwrGuIirnbW+qZVgbzyGz9NXODaGEbcoY8xojA7T0bbZOKBYWeHtQZfrWVNE7tkolx9+aSvr105HR/usqwBxksdHxpIaSFuojObobTWPlG5ZzeRR3rgn5Yikd8B5wKBgQC2+GLJ9wBDbTheSFdQoM9miu1/w0Kk5YKkN0gFBgtg76F4mJQhoJZ/50QRbAxxFkzVY0UkqB/OWoxl4oA5jyHie83BsnYoqQBXxtASNMZG0Kq9H8Mh8DZ5ZHUYb7Uo2dE5ErzBbrHUsqySEtAf/EbG+SnDF/KczW6H9m1PnS1DAQKBgCANQP+nXYE2/81+wmlPqOZqpXdZaTc8tNB2vHfpamw/OCZqoRmZB9iUPOVfeTH6JmlL3K1BRaDnYJci/rWP/QjGLcterlihnZvOzVOfBgsS8MXw1jUjThNI6YAzhEOKBantke/ngwC+3X0s7GoEUIP+D3zdGAk34RhvEryeF+dY"
        local.provider.RSAWrappingKey.key: "MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA52ksO3lnKaagltHTCfUNWgvmlL4OytMU2HxErcjDspvWvhCo3K/+oVNC5CFJLJkpixgYGFQHstjj1xZjtQd0G78ZWvRD7XUP6opSZbgexx9s9dKHgbku7ZHaPswP7uABwzgn2vfspOOyFjSzwY5FbOMTKN3C+q1cjOYbuYVat5UVWG1VdgE+6GHTNwupxMOZHRNNbkoI5HKXe0YOfGYizWHa/da8BG5ccaBeNLXRwbOaEOA1jMsdYWdZ6cnpBLFWLKvwArBGiDBkFzWbC2e115gFdeLGV70lbB4lBpL/+yyoLFBGdJVB/T0arOIyvup0kDsYi6jOsgkQM6+TEojpVwIDAQAB"

    consumer:
      group-id: online-orders-avro-consumer
      auto-offset-reset: earliest
      # By default, KafkaAvroDeserializerConfig.SPECIFIC_AVRO_READER_CONFIG is set to false,
      # so your KafkaAvroDeserializer will produce a GenericData by default, and not SpecificData (POJO).
      properties.specific.avro.reader: true
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#      value-deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
      value-deserializer: io.confluent.encryption.serializers.avro.SecuredSpecificAvroDeserializer
      properties:
        value.deserializer.key: "GeneratedKey" # automatically uses AES
        value.deserializer.wrapping.key: "RSAWrappingKey"
        encryption.provider.name: "cachedkeyprovider"
        cachedkeyprovider.provider.class: "io.confluent.encryption.common.crypto.cipher.impl.CachedCipherProvider"
        cachedkeyprovider.provider.expiry: 10
        cachedkeyprovider.provider.name: "generator"
        generator.provider.class: "io.confluent.encryption.common.crypto.cipher.impl.GeneratorCipherProvider"
        generator.provider.name: "local"
        local.provider.class: "io.confluent.encryption.common.crypto.cipher.impl.LocalCipherProvider"
        local.provider.keys: "Hash,RSAWrappingKey"
        local.provider.Hash.key.type: "Hash"
        local.provider.RSAWrappingKey.key.type: "KeyPair"
        local.provider.RSAWrappingKey.key.private: "MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDnaSw7eWcppqCW0dMJ9Q1aC+aUvg7K0xTYfEStyMOym9a+EKjcr/6hU0LkIUksmSmLGBgYVAey2OPXFmO1B3Qbvxla9EPtdQ/qilJluB7HH2z10oeBuS7tkdo+zA/u4AHDOCfa9+yk47IWNLPBjkVs4xMo3cL6rVyM5hu5hVq3lRVYbVV2AT7oYdM3C6nEw5kdE01uSgjkcpd7Rg58ZiLNYdr91rwEblxxoF40tdHBs5oQ4DWMyx1hZ1npyekEsVYsq/ACsEaIMGQXNZsLZ7XXmAV14sZXvSVsHiUGkv/7LKgsUEZ0lUH9PRqs4jK+6nSQOxiLqM6yCRAzr5MSiOlXAgMBAAECggEAKC3fqzfqDJZM3cLyxJDSz6avU3YodVjvDqOM/SuVpwZd48RavW6lZHdjbt7EqMSzLN5zGI5Gg+waqzbM+xqfM04b5enxfWJM8CkyI00zstkm/wud0Y1Is6EWZr7hqVUlmTK/4MoZQYvzWN2vtFSygzRuGDNg7kt5fVFa0PxxgtxAPwOXFWDMT7bU7csjrsOtxm7bgwm+rxSCSPU9J834TTzQlPID8tP9Ajvj4TrllZN55oKdDNO5aVaMkYRKMBbg/mzHpQE9wWeKX1iGYR0x8N3ctKJvAC6SYcnOiAKKPg0C5Qi6RFg88GdaYq1tUtDbjcP5CUWMZ2X9M5XEqO2WAQKBgQD3iRy7Fm91EFy2duJxNULe0qU5hbRekCmEX7/5HNk+BjWDFLLVFkgtWop7+p+G/TwmmPdpEtRYCbT1k2qHrPgohReo2VzF+K7Q3yppnFu2dPy5T2AL02J9J4BCzxB1uwzpnGd2PqwUX79WsF2ol18F04sMeXUzuKggOm7M2nl8VwKBgQDvUugqw3Yfl9TF5VkVyA26/FOfMYQZ2ovzpTg9Qq7il1F37h8Lg83zvI63NXUlY2khweo0FyMbtZpG0a9dpQBE0f4D2n9JsmpuGbgjYYNNEWUQvuI3bqdQ/ecPpMGvYXWvtnTPG0jr6GbSobL/RXwgOp4H8tOpFNEejaARjDfbAQKBgQCmpYdTKMqGnCpeqPDP2FSZoGSdsjb5BsL8nF2ov1Q93n4+LjwrGuIirnbW+qZVgbzyGz9NXODaGEbcoY8xojA7T0bbZOKBYWeHtQZfrWVNE7tkolx9+aSvr105HR/usqwBxksdHxpIaSFuojObobTWPlG5ZzeRR3rgn5Yikd8B5wKBgQC2+GLJ9wBDbTheSFdQoM9miu1/w0Kk5YKkN0gFBgtg76F4mJQhoJZ/50QRbAxxFkzVY0UkqB/OWoxl4oA5jyHie83BsnYoqQBXxtASNMZG0Kq9H8Mh8DZ5ZHUYb7Uo2dE5ErzBbrHUsqySEtAf/EbG+SnDF/KczW6H9m1PnS1DAQKBgCANQP+nXYE2/81+wmlPqOZqpXdZaTc8tNB2vHfpamw/OCZqoRmZB9iUPOVfeTH6JmlL3K1BRaDnYJci/rWP/QjGLcterlihnZvOzVOfBgsS8MXw1jUjThNI6YAzhEOKBantke/ngwC+3X0s7GoEUIP+D3zdGAk34RhvEryeF+dY"
        local.provider.RSAWrappingKey.key: "MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA52ksO3lnKaagltHTCfUNWgvmlL4OytMU2HxErcjDspvWvhCo3K/+oVNC5CFJLJkpixgYGFQHstjj1xZjtQd0G78ZWvRD7XUP6opSZbgexx9s9dKHgbku7ZHaPswP7uABwzgn2vfspOOyFjSzwY5FbOMTKN3C+q1cjOYbuYVat5UVWG1VdgE+6GHTNwupxMOZHRNNbkoI5HKXe0YOfGYizWHa/da8BG5ccaBeNLXRwbOaEOA1jMsdYWdZ6cnpBLFWLKvwArBGiDBkFzWbC2e115gFdeLGV70lbB4lBpL/+yyoLFBGdJVB/T0arOIyvup0kDsYi6jOsgkQM6+TEojpVwIDAQAB"

    streams:
      application-id: online-orders-processor
      properties.num.stream.threads: 3
      properties.commit.interval.ms: 100
      properties.state.dir: /tmp/kafka-streams
      properties.state.cleanup.delay.ms: 600000
      properties.auto-offset-reset: earliest
      properties.default.key.serde: org.apache.kafka.common.serialization.Serdes$StringSerde
      properties.default.value.serde: org.apache.kafka.common.serialization.Serdes$StringSerde
